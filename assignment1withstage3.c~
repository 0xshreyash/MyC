#include<stdio.h>
#include<stdlib.h>
#include<assert.h>
#include<string.h>
#include<strings.h>
#include<ctype.h>
#include<math.h>

#define MAX_LINE_LEN 1000

#define MAX_LINES_OUT 10

#define MAX_QLEN 100

#define LINE_OK 0
#define LINE_DONE (-1)

#define DEBUG 0
#define VOLUBLE 1

void stage3(char str[],double max_count,int *strt,struct highlines hl[]);

struct highlines
{
	int count;
	char line[MAX_LINE_LEN];
	int rank;
};

int main(int argc, char *argv[])
	{
		char str[ MAX_LINE_LEN],query[MAX_QLEN];
		int i=0,q_len=0,j=0,count=0,k=0,count_l=1,count_b=0;
		int q_index=0;
		char c;
		struct highlines hl[MAX_LINES_OUT];
		q_len=strlen(argv[1]);
		/*Stage 0*/
		if(q_len==0)
		{
			printf("Enter a valid string");
			exit(EXIT_FAILURE);
		}
		
		if(q_len>MAX_QLEN)
		{
			
			printf("The query is too long");
			exit(EXIT_FAILURE);
		}
		
		strcpy(query,argv[1]);
		
		while((c=getchar())!=EOF)
		{
			str[j]=c;
			j++;
		}
		printf("S0: query = %s",query);	
		printf("\n---\n");
		k=0;
		/*Stage 1*/
		for(i=0;str[i]!='\0';i++)
		{ 
			
			c=str[i];
			count_b=0;
			if(c=='\n')
			{
				for(j=k;j<i;j++)
				{
					printf("%c",str[j]);
					count_b++;
				}
				k=i+1;
			printf("\nS1: line %4d, bytes = %d\n---\n",count_l,count_b);
			count_l++;
			}
		}
		/*Stage 2*/
		double count_same=0.0,max_count=0.0;
		count_l=1;
		int strt=0;
		
	
		for(i=0;str[i]!='\0';i++)
		{
			c=str[i];
			k=i;
			for(j=0;query[j]!='\0';j++)
			{
				count_same=0.0;
				q_index=j;
				while(tolower(str[k])==tolower(query[q_index]))
				{
					count_same++;
					k++;
					q_index++;
					
				}
				
				if(max_count<count_same)
				{
					max_count=count_same;
				}
			}
			if(c=='\n')
			{
				if(max_count>0)
				{
					stage3(str,max_count,&strt,hl);
				}
				
				printf("S2: line %4d, score= %7.3f\n",count_l,max_count);
				max_count=0;
				count_l++;
			}
				
		}
		/*Stage 3*/
		printf("----------------------------------------------------------\n");
		
		return 0;
	}
	void stage3(char str[],double max_count,int *strt,struct highlines hl[])
	{
		char strtmp[MAX_LINE_LEN],stri[MAX_LINE_LEN],strtmp2[MAX_LINE_LEN];
		int tmprnk,tmpcount,i,j,count=0;
		while(str[*strt]!='\0'||str[*strt]!='\0')
		{
			stri[count++]=str[*strt++];
		}
		*strt++;
		for(i=0;i<MAX_LINES_OUT;i++)
		{
			if(hl[i].count<(int)max_count)
			{
				strcpy(strtmp,hl[i].line);
				strcpy(hl[i].line,stri);
				for(j=i+1;j<MAX_LINES_OUT;j++)
				{
					strcpy(strtmp,strtmp2);
					strcpy(strtmp2,hl[j].line);
					strcpy(hl[j].line,strtmp);
				}
			}
		}
	}
				
					
					
					
					
			
			
			
			
			
				
					
				
			
		
			
		
		
	
		
		
		
		
		
		
